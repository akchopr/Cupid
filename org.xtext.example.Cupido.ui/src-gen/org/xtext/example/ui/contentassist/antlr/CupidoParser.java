/*
 * generated by Xtext
 */
package org.xtext.example.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.example.services.CupidoGrammarAccess;

public class CupidoParser extends AbstractContentAssistParser {
	
	@Inject
	private CupidoGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.example.ui.contentassist.antlr.internal.InternalCupidoParser createParser() {
		org.xtext.example.ui.contentassist.antlr.internal.InternalCupidoParser result = new org.xtext.example.ui.contentassist.antlr.internal.InternalCupidoParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getBExprAccess().getAlternatives(), "rule__BExpr__Alternatives");
					put(grammarAccess.getIntervalAccess().getAlternatives(), "rule__Interval__Alternatives");
					put(grammarAccess.getEventAccess().getAlternatives(), "rule__Event__Alternatives");
					put(grammarAccess.getEventAccess().getLifeStateAlternatives_1_0_0(), "rule__Event__LifeStateAlternatives_1_0_0");
					put(grammarAccess.getTimeStampAccess().getAlternatives(), "rule__TimeStamp__Alternatives");
					put(grammarAccess.getCupidoAccess().getGroup(), "rule__Cupido__Group__0");
					put(grammarAccess.getSchemataAccess().getGroup(), "rule__Schemata__Group__0");
					put(grammarAccess.getEventRelationAccess().getGroup(), "rule__EventRelation__Group__0");
					put(grammarAccess.getEventRelationAccess().getGroup_3(), "rule__EventRelation__Group_3__0");
					put(grammarAccess.getEventRelationAccess().getGroup_7(), "rule__EventRelation__Group_7__0");
					put(grammarAccess.getCommitmentAccess().getGroup(), "rule__Commitment__Group__0");
					put(grammarAccess.getCommitmentAccess().getGroup_7(), "rule__Commitment__Group_7__0");
					put(grammarAccess.getEExprAccess().getGroup(), "rule__EExpr__Group__0");
					put(grammarAccess.getEExprAccess().getGroup_1(), "rule__EExpr__Group_1__0");
					put(grammarAccess.getOExprAccess().getGroup(), "rule__OExpr__Group__0");
					put(grammarAccess.getOExprAccess().getGroup_1(), "rule__OExpr__Group_1__0");
					put(grammarAccess.getAExprAccess().getGroup(), "rule__AExpr__Group__0");
					put(grammarAccess.getAExprAccess().getGroup_1(), "rule__AExpr__Group_1__0");
					put(grammarAccess.getWExprAccess().getGroup(), "rule__WExpr__Group__0");
					put(grammarAccess.getWExprAccess().getGroup_1(), "rule__WExpr__Group_1__0");
					put(grammarAccess.getBExprAccess().getGroup_1(), "rule__BExpr__Group_1__0");
					put(grammarAccess.getIntervalAccess().getGroup_1(), "rule__Interval__Group_1__0");
					put(grammarAccess.getIntervalAccess().getGroup_2(), "rule__Interval__Group_2__0");
					put(grammarAccess.getIntervalAccess().getGroup_3(), "rule__Interval__Group_3__0");
					put(grammarAccess.getIntervalAccess().getGroup_4(), "rule__Interval__Group_4__0");
					put(grammarAccess.getEventAccess().getGroup_1(), "rule__Event__Group_1__0");
					put(grammarAccess.getTimeStampAccess().getGroup_1(), "rule__TimeStamp__Group_1__0");
					put(grammarAccess.getTimeStampAccess().getGroup_1_1(), "rule__TimeStamp__Group_1_1__0");
					put(grammarAccess.getCupidoAccess().getCommitmentsAssignment_1(), "rule__Cupido__CommitmentsAssignment_1");
					put(grammarAccess.getSchemataAccess().getSchemataAssignment_1(), "rule__Schemata__SchemataAssignment_1");
					put(grammarAccess.getEventRelationAccess().getEventAssignment_0(), "rule__EventRelation__EventAssignment_0");
					put(grammarAccess.getEventRelationAccess().getParamsAssignment_2(), "rule__EventRelation__ParamsAssignment_2");
					put(grammarAccess.getEventRelationAccess().getParamsAssignment_3_1(), "rule__EventRelation__ParamsAssignment_3_1");
					put(grammarAccess.getEventRelationAccess().getKeyParamsAssignment_6(), "rule__EventRelation__KeyParamsAssignment_6");
					put(grammarAccess.getEventRelationAccess().getKeyParamsAssignment_7_1(), "rule__EventRelation__KeyParamsAssignment_7_1");
					put(grammarAccess.getEventRelationAccess().getTimeParamAssignment_9(), "rule__EventRelation__TimeParamAssignment_9");
					put(grammarAccess.getParamAccess().getNameAssignment(), "rule__Param__NameAssignment");
					put(grammarAccess.getCommitmentAccess().getLabelAssignment_1(), "rule__Commitment__LabelAssignment_1");
					put(grammarAccess.getCommitmentAccess().getDebtorAssignment_2(), "rule__Commitment__DebtorAssignment_2");
					put(grammarAccess.getCommitmentAccess().getCreditorAssignment_4(), "rule__Commitment__CreditorAssignment_4");
					put(grammarAccess.getCommitmentAccess().getTriggerAssignment_6(), "rule__Commitment__TriggerAssignment_6");
					put(grammarAccess.getCommitmentAccess().getAntecedentAssignment_7_1(), "rule__Commitment__AntecedentAssignment_7_1");
					put(grammarAccess.getCommitmentAccess().getConsequentAssignment_9(), "rule__Commitment__ConsequentAssignment_9");
					put(grammarAccess.getEExprAccess().getRightAssignment_1_2(), "rule__EExpr__RightAssignment_1_2");
					put(grammarAccess.getOExprAccess().getRightAssignment_1_2(), "rule__OExpr__RightAssignment_1_2");
					put(grammarAccess.getAExprAccess().getRightAssignment_1_2(), "rule__AExpr__RightAssignment_1_2");
					put(grammarAccess.getWExprAccess().getRightAssignment_1_2(), "rule__WExpr__RightAssignment_1_2");
					put(grammarAccess.getIntervalAccess().getEventAssignment_0(), "rule__Interval__EventAssignment_0");
					put(grammarAccess.getIntervalAccess().getEventAssignment_1_0(), "rule__Interval__EventAssignment_1_0");
					put(grammarAccess.getIntervalAccess().getLTimeAssignment_1_2(), "rule__Interval__LTimeAssignment_1_2");
					put(grammarAccess.getIntervalAccess().getRTimeAssignment_1_4(), "rule__Interval__RTimeAssignment_1_4");
					put(grammarAccess.getIntervalAccess().getEventAssignment_2_0(), "rule__Interval__EventAssignment_2_0");
					put(grammarAccess.getIntervalAccess().getRTimeAssignment_2_3(), "rule__Interval__RTimeAssignment_2_3");
					put(grammarAccess.getIntervalAccess().getEventAssignment_3_0(), "rule__Interval__EventAssignment_3_0");
					put(grammarAccess.getIntervalAccess().getLTimeAssignment_3_2(), "rule__Interval__LTimeAssignment_3_2");
					put(grammarAccess.getIntervalAccess().getEventAssignment_4_0(), "rule__Interval__EventAssignment_4_0");
					put(grammarAccess.getEventAccess().getNameAssignment_0(), "rule__Event__NameAssignment_0");
					put(grammarAccess.getEventAccess().getLifeStateAssignment_1_0(), "rule__Event__LifeStateAssignment_1_0");
					put(grammarAccess.getEventAccess().getLabelAssignment_1_1(), "rule__Event__LabelAssignment_1_1");
					put(grammarAccess.getTimeStampAccess().getValAssignment_0(), "rule__TimeStamp__ValAssignment_0");
					put(grammarAccess.getTimeStampAccess().getEventReferenceAssignment_1_0(), "rule__TimeStamp__EventReferenceAssignment_1_0");
					put(grammarAccess.getTimeStampAccess().getShiftAssignment_1_1_1(), "rule__TimeStamp__ShiftAssignment_1_1_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.example.ui.contentassist.antlr.internal.InternalCupidoParser typedParser = (org.xtext.example.ui.contentassist.antlr.internal.InternalCupidoParser) parser;
			typedParser.entryRuleCupido();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public CupidoGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(CupidoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
