/*
 * generated by Xtext
 */
grammar InternalCupido;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.CupidoGrammarAccess;

}

@parser::members {

 	private CupidoGrammarAccess grammarAccess;
 	
    public InternalCupidoParser(TokenStream input, CupidoGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Cupido";	
   	}
   	
   	@Override
   	protected CupidoGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCupido
entryRuleCupido returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCupidoRule()); }
	 iv_ruleCupido=ruleCupido 
	 { $current=$iv_ruleCupido.current; } 
	 EOF 
;

// Rule Cupido
ruleCupido returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCupidoAccess().getSchemataParserRuleCall_0()); 
    }
    this_Schemata_0=ruleSchemata
    { 
        $current = $this_Schemata_0.current; 
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCupidoAccess().getCommitmentsCommitmentParserRuleCall_1_0()); 
	    }
		lv_commitments_1_0=ruleCommitment		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCupidoRule());
	        }
       		add(
       			$current, 
       			"commitments",
        		lv_commitments_1_0, 
        		"Commitment");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSchemata
entryRuleSchemata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSchemataRule()); }
	 iv_ruleSchemata=ruleSchemata 
	 { $current=$iv_ruleSchemata.current; } 
	 EOF 
;

// Rule Schemata
ruleSchemata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_SCHEMA_0=RULE_SCHEMA
    { 
    newLeafNode(this_SCHEMA_0, grammarAccess.getSchemataAccess().getSCHEMATerminalRuleCall_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSchemataAccess().getSchemataEventRelationParserRuleCall_1_0()); 
	    }
		lv_schemata_1_0=ruleEventRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSchemataRule());
	        }
       		add(
       			$current, 
       			"schemata",
        		lv_schemata_1_0, 
        		"EventRelation");
	        afterParserOrEnumRuleCall();
	    }

)
)+)
;





// Entry rule entryRuleEventRelation
entryRuleEventRelation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRelationRule()); }
	 iv_ruleEventRelation=ruleEventRelation 
	 { $current=$iv_ruleEventRelation.current; } 
	 EOF 
;

// Rule EventRelation
ruleEventRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getEventRelationAccess().getEventEventParserRuleCall_0_0()); 
	    }
		lv_event_0_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRelationRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getEventRelationAccess().getLPARENTerminalRuleCall_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventRelationAccess().getParamsParamParserRuleCall_2_0()); 
	    }
		lv_params_2_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRelationRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_2_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_3=RULE_COMMA
    { 
    newLeafNode(this_COMMA_3, grammarAccess.getEventRelationAccess().getCOMMATerminalRuleCall_3_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventRelationAccess().getParamsParamParserRuleCall_3_1_0()); 
	    }
		lv_params_4_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRelationRule());
	        }
       		add(
       			$current, 
       			"params",
        		lv_params_4_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_RPAREN_5=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_5, grammarAccess.getEventRelationAccess().getRPARENTerminalRuleCall_4()); 
    }
this_KEY_6=RULE_KEY
    { 
    newLeafNode(this_KEY_6, grammarAccess.getEventRelationAccess().getKEYTerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventRelationAccess().getKeyParamsParamParserRuleCall_6_0()); 
	    }
		lv_keyParams_7_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRelationRule());
	        }
       		add(
       			$current, 
       			"keyParams",
        		lv_keyParams_7_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_COMMA_8=RULE_COMMA
    { 
    newLeafNode(this_COMMA_8, grammarAccess.getEventRelationAccess().getCOMMATerminalRuleCall_7_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventRelationAccess().getKeyParamsParamParserRuleCall_7_1_0()); 
	    }
		lv_keyParams_9_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRelationRule());
	        }
       		add(
       			$current, 
       			"keyParams",
        		lv_keyParams_9_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
))*this_TIME_10=RULE_TIME
    { 
    newLeafNode(this_TIME_10, grammarAccess.getEventRelationAccess().getTIMETerminalRuleCall_8()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEventRelationAccess().getTimeParamParamParserRuleCall_9_0()); 
	    }
		lv_timeParam_11_0=ruleParam		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEventRelationRule());
	        }
       		set(
       			$current, 
       			"timeParam",
        		lv_timeParam_11_0, 
        		"Param");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleParam
entryRuleParam returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getParamRule()); }
	 iv_ruleParam=ruleParam 
	 { $current=$iv_ruleParam.current; } 
	 EOF 
;

// Rule Param
ruleParam returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getParamAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getParamRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleCommitment
entryRuleCommitment returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommitmentRule()); }
	 iv_ruleCommitment=ruleCommitment 
	 { $current=$iv_ruleCommitment.current; } 
	 EOF 
;

// Rule Commitment
ruleCommitment returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_COMMIT_0=RULE_COMMIT
    { 
    newLeafNode(this_COMMIT_0, grammarAccess.getCommitmentAccess().getCOMMITTerminalRuleCall_0()); 
    }
(
(
		lv_label_1_0=RULE_ID
		{
			newLeafNode(lv_label_1_0, grammarAccess.getCommitmentAccess().getLabelIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommitmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_1_0, 
        		"ID");
	    }

)
)(
(
		lv_debtor_2_0=RULE_ID
		{
			newLeafNode(lv_debtor_2_0, grammarAccess.getCommitmentAccess().getDebtorIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommitmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"debtor",
        		lv_debtor_2_0, 
        		"ID");
	    }

)
)this_TO_3=RULE_TO
    { 
    newLeafNode(this_TO_3, grammarAccess.getCommitmentAccess().getTOTerminalRuleCall_3()); 
    }
(
(
		lv_creditor_4_0=RULE_ID
		{
			newLeafNode(lv_creditor_4_0, grammarAccess.getCommitmentAccess().getCreditorIDTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCommitmentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"creditor",
        		lv_creditor_4_0, 
        		"ID");
	    }

)
)this_CREATE_5=RULE_CREATE
    { 
    newLeafNode(this_CREATE_5, grammarAccess.getCommitmentAccess().getCREATETerminalRuleCall_5()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommitmentAccess().getTriggerEExprParserRuleCall_6_0()); 
	    }
		lv_trigger_6_0=ruleEExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommitmentRule());
	        }
       		set(
       			$current, 
       			"trigger",
        		lv_trigger_6_0, 
        		"EExpr");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_DETACH_7=RULE_DETACH
    { 
    newLeafNode(this_DETACH_7, grammarAccess.getCommitmentAccess().getDETACHTerminalRuleCall_7_0()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommitmentAccess().getAntecedentEExprParserRuleCall_7_1_0()); 
	    }
		lv_antecedent_8_0=ruleEExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommitmentRule());
	        }
       		set(
       			$current, 
       			"antecedent",
        		lv_antecedent_8_0, 
        		"EExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))?this_DISCHARGE_9=RULE_DISCHARGE
    { 
    newLeafNode(this_DISCHARGE_9, grammarAccess.getCommitmentAccess().getDISCHARGETerminalRuleCall_8()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCommitmentAccess().getConsequentEExprParserRuleCall_9_0()); 
	    }
		lv_consequent_10_0=ruleEExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommitmentRule());
	        }
       		set(
       			$current, 
       			"consequent",
        		lv_consequent_10_0, 
        		"EExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleEExpr
entryRuleEExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEExprRule()); }
	 iv_ruleEExpr=ruleEExpr 
	 { $current=$iv_ruleEExpr.current; } 
	 EOF 
;

// Rule EExpr
ruleEExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getEExprAccess().getOExprParserRuleCall_0()); 
    }
    this_OExpr_0=ruleOExpr
    { 
        $current = $this_OExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getEExprAccess().getEExprLeftAction_1_0(),
            $current);
    }
)this_EXCEPT_2=RULE_EXCEPT
    { 
    newLeafNode(this_EXCEPT_2, grammarAccess.getEExprAccess().getEXCEPTTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getEExprAccess().getRightOExprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleOExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"OExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleOExpr
entryRuleOExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOExprRule()); }
	 iv_ruleOExpr=ruleOExpr 
	 { $current=$iv_ruleOExpr.current; } 
	 EOF 
;

// Rule OExpr
ruleOExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOExprAccess().getAExprParserRuleCall_0()); 
    }
    this_AExpr_0=ruleAExpr
    { 
        $current = $this_AExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getOExprAccess().getOExprLeftAction_1_0(),
            $current);
    }
)this_OR_2=RULE_OR
    { 
    newLeafNode(this_OR_2, grammarAccess.getOExprAccess().getORTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getOExprAccess().getRightAExprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleAExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"AExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAExpr
entryRuleAExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAExprRule()); }
	 iv_ruleAExpr=ruleAExpr 
	 { $current=$iv_ruleAExpr.current; } 
	 EOF 
;

// Rule AExpr
ruleAExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAExprAccess().getWExprParserRuleCall_0()); 
    }
    this_WExpr_0=ruleWExpr
    { 
        $current = $this_WExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getAExprAccess().getAExprLeftAction_1_0(),
            $current);
    }
)this_AND_2=RULE_AND
    { 
    newLeafNode(this_AND_2, grammarAccess.getAExprAccess().getANDTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAExprAccess().getRightWExprParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleWExpr		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAExprRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"WExpr");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleWExpr
entryRuleWExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getWExprRule()); }
	 iv_ruleWExpr=ruleWExpr 
	 { $current=$iv_ruleWExpr.current; } 
	 EOF 
;

// Rule WExpr
ruleWExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getWExprAccess().getBExprParserRuleCall_0()); 
    }
    this_BExpr_0=ruleBExpr
    { 
        $current = $this_BExpr_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getWExprAccess().getWExprLeftAction_1_0(),
            $current);
    }
)this_WHERE_2=RULE_WHERE
    { 
    newLeafNode(this_WHERE_2, grammarAccess.getWExprAccess().getWHERETerminalRuleCall_1_1()); 
    }
(
(
		lv_right_3_0=RULE_STRING
		{
			newLeafNode(lv_right_3_0, grammarAccess.getWExprAccess().getRightSTRINGTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getWExprRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"STRING");
	    }

)
))*)
;





// Entry rule entryRuleBExpr
entryRuleBExpr returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBExprRule()); }
	 iv_ruleBExpr=ruleBExpr 
	 { $current=$iv_ruleBExpr.current; } 
	 EOF 
;

// Rule BExpr
ruleBExpr returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getBExprAccess().getIntervalParserRuleCall_0()); 
    }
    this_Interval_0=ruleInterval
    { 
        $current = $this_Interval_0.current; 
        afterParserOrEnumRuleCall();
    }

    |(this_LPAREN_1=RULE_LPAREN
    { 
    newLeafNode(this_LPAREN_1, grammarAccess.getBExprAccess().getLPARENTerminalRuleCall_1_0()); 
    }

    { 
        newCompositeNode(grammarAccess.getBExprAccess().getEExprParserRuleCall_1_1()); 
    }
    this_EExpr_2=ruleEExpr
    { 
        $current = $this_EExpr_2.current; 
        afterParserOrEnumRuleCall();
    }
this_RPAREN_3=RULE_RPAREN
    { 
    newLeafNode(this_RPAREN_3, grammarAccess.getBExprAccess().getRPARENTerminalRuleCall_1_2()); 
    }
))
;





// Entry rule entryRuleInterval
entryRuleInterval returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntervalRule()); }
	 iv_ruleInterval=ruleInterval 
	 { $current=$iv_ruleInterval.current; } 
	 EOF 
;

// Rule Interval
ruleInterval returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getEventEventParserRuleCall_0_0()); 
	    }
		lv_event_0_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_0_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getEventEventParserRuleCall_1_0_0()); 
	    }
		lv_event_1_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_1_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)this_LBRACKET_2=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_2, grammarAccess.getIntervalAccess().getLBRACKETTerminalRuleCall_1_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getLTimeTimeStampParserRuleCall_1_2_0()); 
	    }
		lv_lTime_3_0=ruleTimeStamp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"lTime",
        		lv_lTime_3_0, 
        		"TimeStamp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_COMMA_4=RULE_COMMA
    { 
    newLeafNode(this_COMMA_4, grammarAccess.getIntervalAccess().getCOMMATerminalRuleCall_1_3()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getRTimeTimeStampParserRuleCall_1_4_0()); 
	    }
		lv_rTime_5_0=ruleTimeStamp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"rTime",
        		lv_rTime_5_0, 
        		"TimeStamp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACKET_6=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_6, grammarAccess.getIntervalAccess().getRBRACKETTerminalRuleCall_1_5()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getEventEventParserRuleCall_2_0_0()); 
	    }
		lv_event_7_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_7_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)this_LBRACKET_8=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_8, grammarAccess.getIntervalAccess().getLBRACKETTerminalRuleCall_2_1()); 
    }
this_COMMA_9=RULE_COMMA
    { 
    newLeafNode(this_COMMA_9, grammarAccess.getIntervalAccess().getCOMMATerminalRuleCall_2_2()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getRTimeTimeStampParserRuleCall_2_3_0()); 
	    }
		lv_rTime_10_0=ruleTimeStamp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"rTime",
        		lv_rTime_10_0, 
        		"TimeStamp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_RBRACKET_11=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_11, grammarAccess.getIntervalAccess().getRBRACKETTerminalRuleCall_2_4()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getEventEventParserRuleCall_3_0_0()); 
	    }
		lv_event_12_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_12_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)this_LBRACKET_13=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_13, grammarAccess.getIntervalAccess().getLBRACKETTerminalRuleCall_3_1()); 
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getLTimeTimeStampParserRuleCall_3_2_0()); 
	    }
		lv_lTime_14_0=ruleTimeStamp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"lTime",
        		lv_lTime_14_0, 
        		"TimeStamp");
	        afterParserOrEnumRuleCall();
	    }

)
)this_COMMA_15=RULE_COMMA
    { 
    newLeafNode(this_COMMA_15, grammarAccess.getIntervalAccess().getCOMMATerminalRuleCall_3_3()); 
    }
this_RBRACKET_16=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_16, grammarAccess.getIntervalAccess().getRBRACKETTerminalRuleCall_3_4()); 
    }
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getIntervalAccess().getEventEventParserRuleCall_4_0_0()); 
	    }
		lv_event_17_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntervalRule());
	        }
       		set(
       			$current, 
       			"event",
        		lv_event_17_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)this_LBRACKET_18=RULE_LBRACKET
    { 
    newLeafNode(this_LBRACKET_18, grammarAccess.getIntervalAccess().getLBRACKETTerminalRuleCall_4_1()); 
    }
this_COMMA_19=RULE_COMMA
    { 
    newLeafNode(this_COMMA_19, grammarAccess.getIntervalAccess().getCOMMATerminalRuleCall_4_2()); 
    }
this_RBRACKET_20=RULE_RBRACKET
    { 
    newLeafNode(this_RBRACKET_20, grammarAccess.getIntervalAccess().getRBRACKETTerminalRuleCall_4_3()); 
    }
))
;





// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	 iv_ruleEvent=ruleEvent 
	 { $current=$iv_ruleEvent.current; } 
	 EOF 
;

// Rule Event
ruleEvent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getEventAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
    |((
(
(
		lv_lifeState_1_1=RULE_CREATED
		{
			newLeafNode(lv_lifeState_1_1, grammarAccess.getEventAccess().getLifeStateCREATEDTerminalRuleCall_1_0_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lifeState",
        		lv_lifeState_1_1, 
        		"CREATED");
	    }

    |		lv_lifeState_1_2=RULE_DETACHED
		{
			newLeafNode(lv_lifeState_1_2, grammarAccess.getEventAccess().getLifeStateDETACHEDTerminalRuleCall_1_0_0_1()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lifeState",
        		lv_lifeState_1_2, 
        		"DETACHED");
	    }

    |		lv_lifeState_1_3=RULE_DISCHARGED
		{
			newLeafNode(lv_lifeState_1_3, grammarAccess.getEventAccess().getLifeStateDISCHARGEDTerminalRuleCall_1_0_0_2()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lifeState",
        		lv_lifeState_1_3, 
        		"DISCHARGED");
	    }

    |		lv_lifeState_1_4=RULE_EXPIRED
		{
			newLeafNode(lv_lifeState_1_4, grammarAccess.getEventAccess().getLifeStateEXPIREDTerminalRuleCall_1_0_0_3()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lifeState",
        		lv_lifeState_1_4, 
        		"EXPIRED");
	    }

    |		lv_lifeState_1_5=RULE_VIOLATED
		{
			newLeafNode(lv_lifeState_1_5, grammarAccess.getEventAccess().getLifeStateVIOLATEDTerminalRuleCall_1_0_0_4()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lifeState",
        		lv_lifeState_1_5, 
        		"VIOLATED");
	    }

)

)
)(
(
		lv_label_2_0=RULE_ID
		{
			newLeafNode(lv_label_2_0, grammarAccess.getEventAccess().getLabelIDTerminalRuleCall_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getEventRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"label",
        		lv_label_2_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleTimeStamp
entryRuleTimeStamp returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeStampRule()); }
	 iv_ruleTimeStamp=ruleTimeStamp 
	 { $current=$iv_ruleTimeStamp.current; } 
	 EOF 
;

// Rule TimeStamp
ruleTimeStamp returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_val_0_0=RULE_STRING
		{
			newLeafNode(lv_val_0_0, grammarAccess.getTimeStampAccess().getValSTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeStampRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"val",
        		lv_val_0_0, 
        		"STRING");
	    }

)
)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getTimeStampAccess().getEventReferenceEventParserRuleCall_1_0_0()); 
	    }
		lv_eventReference_1_0=ruleEvent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTimeStampRule());
	        }
       		set(
       			$current, 
       			"eventReference",
        		lv_eventReference_1_0, 
        		"Event");
	        afterParserOrEnumRuleCall();
	    }

)
)(this_PLUS_2=RULE_PLUS
    { 
    newLeafNode(this_PLUS_2, grammarAccess.getTimeStampAccess().getPLUSTerminalRuleCall_1_1_0()); 
    }
(
(
		lv_shift_3_0=RULE_INT
		{
			newLeafNode(lv_shift_3_0, grammarAccess.getTimeStampAccess().getShiftINTTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeStampRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"shift",
        		lv_shift_3_0, 
        		"INT");
	    }

)
))?))
;





RULE_SCHEMA : 'schema';

RULE_KEY : 'key';

RULE_TIME : 'time';

RULE_COMMIT : 'commitment';

RULE_CREATE : 'create';

RULE_DETACH : 'detach';

RULE_DISCHARGE : 'discharge';

RULE_TO : 'to';

RULE_EXCEPT : 'except';

RULE_AND : 'and';

RULE_OR : 'or';

RULE_WHERE : 'where';

RULE_CREATED : 'created';

RULE_DETACHED : 'detached';

RULE_DISCHARGED : 'discharged';

RULE_EXPIRED : 'expired';

RULE_VIOLATED : 'violated';

RULE_COMMA : ',';

RULE_LBRACKET : '[';

RULE_RBRACKET : ']';

RULE_LPAREN : '(';

RULE_RPAREN : ')';

RULE_PLUS : '+';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


